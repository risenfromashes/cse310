#pragma once

#include <optional>
#include <string>

/* contdown from 1024 for tokens not generated by bison */
const int COMMENT = 1023;
const int MULTI_LINE_COMMENT = 1022;

class Token
{
public:
  using Type = int;

  Token(Type type);
  Token(Type type, std::string &&str);
  Token(Type type, std::string_view str);

  Type type() const { return type_; }

  std::optional<std::string_view> value() { return value_; }
  std::string move_value()
  {
    assert(value_);
    return std::move(value_.value());
  }

  const char *type_str() const;

private:
  Type type_;
  std::optional<std::string> value_;
};

inline bool is_comment(Token::Type type)
{
  return type == COMMENT || type == MULTI_LINE_COMMENT;
}
